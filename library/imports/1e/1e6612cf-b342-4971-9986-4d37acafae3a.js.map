{"version":3,"sources":["../../../../../../assets/script/services/mgobe/assets/script/services/mgobe/MgobeService.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../../assets/script/services/mgobe","sourcesContent":["import { Config } from \"../../Constants\";\nimport \"../../library/mgobe/MGOBE.js\";\nimport { PlayerVO } from \"../../model/vo/RoomVO\";\n\nexport default class MgobeService {\n    // 将room置为私有 private\n    static room: MGOBE.Room = null;\n\n    static getMyRoom(callback?: (event) => any) {\n        MGOBE.Room.getMyRoom(event => {\n            console.log(\"获取当前房间信息\", event);\n            if (event.code === MGOBE.ErrCode.EC_OK) {\n                this.room.roomInfo = event.data.roomInfo;\n\n            }\n            callback && callback(event);\n        });\n    }\n\n    static initRoom(roomId: string, callback?: (event) => any) {\n        // const roomInfo = { id: roomId };\n        // this.room.initRoom(roomInfo);\n        const getRoomByRoomIdPara2 = {\n            roomId: roomId,\n        };\n        MGOBE.Room.getRoomByRoomId(getRoomByRoomIdPara2, (event) => {\n            callback && callback(event);\n        });\n    }\n\n    static joinRoom(roomId: string, player: PlayerVO, callback?: (event) => any) {\n        this.initRoom(roomId, (event) => {\n            console.log(\"获取房间信息\", roomId, event);\n            if (event.code === MGOBE.ErrCode.EC_OK) {\n                console.log(\"获取房间信息, 更新成功\", roomId);\n                this.room.initRoom(event.data.roomInfo);\n\n            }\n            const playerInfo: MGOBE.types.PlayerInfoPara = {\n                name: player.nickName,\n                customPlayerStatus: player.isReady ? 1 : 0,\n                customProfile: player.avatarUrl,\n            };\n\n            const joinRoomPara: MGOBE.types.JoinRoomPara = {\n                playerInfo: playerInfo,\n            };\n            this.room.joinRoom(joinRoomPara, (event) => {\n                callback && callback(event);\n            });\n        });\n    }\n\n    static createRoom(player: PlayerVO, maxPlayers: number, roomType: string, callback?: (event) => any) {\n        const playerInfo: MGOBE.types.PlayerInfoPara = {\n            name: player.nickName,\n            customPlayerStatus: player.isReady ? 1 : 0,\n            customProfile: player.avatarUrl,\n        };\n\n        const createRoomPara: MGOBE.types.CreateRoomPara = {\n            roomName: \"房间名\",\n            maxPlayers: maxPlayers,\n            roomType: roomType,\n            isPrivate: false,\n            customProperties: \"WAIT\",\n            playerInfo: playerInfo,\n        };\n\n        this.room.createRoom(createRoomPara, (event) => {\n            callback && callback(event);\n        });\n    }\n\n    static leaveRoom(callback?: (event) => any) {\n        this.room.leaveRoom({}, event => {\n            callback && callback(event);\n        });\n    }\n\n    static changeCustomPlayerStatus(customPlayerStatus, callback?: (event) => any) {\n        const changeCustomPlayerStatusPara = {\n            customPlayerStatus\n        };\n\n        this.room.changeCustomPlayerStatus(changeCustomPlayerStatusPara, event => {\n            callback && callback(event);\n        });\n    }\n\n    static isInited(): boolean {\n        // 初始化成功后才有玩家ID\n        return !!MGOBE.Player && !!MGOBE.Player.id;\n    }\n\n    static initMgobeSDK(openId: string, gameId: string, secretKey: string, url: string, cacertNativeUrl: string, callback?: (event: { code: MGOBE.ErrCode }) => any): void {\n        // 如果已经初始化，直接回调成功\n        if (this.isInited()) {\n            return callback && callback({ code: MGOBE.ErrCode.EC_OK });\n        }\n\n        let gameInfo: MGOBE.types.GameInfoPara = {\n            gameId: gameId,\n            secretKey: secretKey,\n            openId: openId,\n        }\n        let config: MGOBE.types.ConfigPara = {\n            url: url,\n            reconnectInterval: Config.reconnectInterval,\n            reconnectMaxTimes: Config.reconnectMaxTimes,\n            resendInterval: Config.resendInterval,\n            resendTimeout: Config.resendTimeout,\n            isAutoRequestFrame: true,\n            cacertNativeUrl: cacertNativeUrl,\n        }\n\n        MGOBE.DebuggerLog.enable = Config.isDebug;\n\n        // if (cc.sys.isNative) {\n        //     MGOBE.DebuggerLog.enable = false;\n        // }\n\n        // 初始化\n        MGOBE.Listener.init(gameInfo, config, event => {\n            if (event.code === MGOBE.ErrCode.EC_OK) {\n                console.log(\"初始化成功\");\n                // 初始化后才能添加监听\n                this.room = new MGOBE.Room();\n                MGOBE.Listener.add(this.room);\n                // 设置默认广播\n                this.setBroadcastCallbacks(null, {});\n            } else {\n                console.log(\"初始化失败\", event.code);\n            }\n            callback && callback({ code: event.code });\n        });\n    }\n\n    // TODO 将callback注册放到这里 将room\n    static setCallbacks() {\n\n    }\n\n    /**\n     * 设置房间广播回调函数\n     * @param broadcastCallbacks\n     */\n    static setBroadcastCallbacks(context: any, broadcastCallbacks?: BroadcastCallbacks) {\n\n        if (!this.room) {\n            return;\n        }\n\n        // 默认回调函数\n        const generateDefaultCallback = (tag: string) => (event) => { console.log(tag, \"->\", event); };\n\n        const defaultCallbacks: BroadcastCallbacks = {\n            onUpdate: () => generateDefaultCallback(\"onUpdate\"),\n            onJoinRoom: () => generateDefaultCallback(\"onJoinRoom\"),\n            onLeaveRoom: () => generateDefaultCallback(\"onLeaveRoom\"),\n            onChangeRoom: () => generateDefaultCallback(\"onChangeRoom\"),\n            onDismissRoom: () => generateDefaultCallback(\"onDismissRoom\"),\n            onStartFrameSync: () => generateDefaultCallback(\"onStartFrameSync\"),\n            onStopFrameSync: () => generateDefaultCallback(\"onStopFrameSync\"),\n            onRecvFrame: (event: MGOBE.types.BroadcastEvent<MGOBE.types.RecvFrameBst>) => {\n                generateDefaultCallback(\"onRecvFrame\");\n                // 每次收到帧广播都需要计算\n                // calcFrame(event.data.frame);\n            },\n            onChangeCustomPlayerStatus: () => generateDefaultCallback(\"onChangeCustomPlayerStatus\"),\n            onRemovePlayer: () => generateDefaultCallback(\"onRemovePlayer\"),\n            onRecvFromClient: () => generateDefaultCallback(\"onRecvFromClient\"),\n            onRecvFromGameSvr: () => generateDefaultCallback(\"onRecvFromGameSvr\"),\n            onAutoRequestFrameError: () => generateDefaultCallback(\"onAutoRequestFrameError\"),\n        };\n\n        // 给 room 实例设置广播回调函数\n        Object.keys(defaultCallbacks).forEach((key: keyof BroadcastCallbacks) => {\n            const callback = broadcastCallbacks[key] ? broadcastCallbacks[key].bind(context) : defaultCallbacks[key];\n            this.room[key] = callback;\n        });\n    }\n}\n\ninterface BroadcastCallbacks {\n    onUpdate?,\n    onJoinRoom?,\n    onLeaveRoom?,\n    onChangeRoom?,\n    onDismissRoom?,\n    onStartFrameSync?,\n    onStopFrameSync?,\n    onRecvFrame?,\n    onChangeCustomPlayerStatus?,\n    onRemovePlayer?,\n    onRecvFromClient?,\n    onRecvFromGameSvr?,\n    onAutoRequestFrameError?,\n}"]}