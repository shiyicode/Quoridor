{"version":3,"sources":["../../../../../assets/script/model/assets/script/model/UserProxy.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,sCAAqC;AAErC;IAAuC,6BAAa;IAahD;QAAA,YACI,kBAAM,SAAS,CAAC,IAAI,CAAC,SAExB;QAbO,UAAI,GAAW,IAAI,CAAC;QACpB,YAAM,GAAqB,IAAI,CAAC;QAWpC,KAAI,CAAC,IAAI,GAAG,IAAI,eAAM,EAAE,CAAC;;IAC7B,CAAC;IAVa,qBAAW,GAAzB;QACI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,SAAS,EAAE,CAAC;SACnC;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAOM,6BAAS,GAAhB,UAAiB,MAAc;QAC3B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAC9B,CAAC;IAEM,6BAAS,GAAhB;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IAC5B,CAAC;IAEM,+BAAW,GAAlB,UAAmB,QAAgB;QAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAClC,CAAC;IAEM,+BAAW,GAAlB;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC9B,CAAC;IAEM,+BAAW,GAAlB,UAAmB,QAAa;QAC5B,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;QAC1C,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QACnC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;IAC3C,CAAC;IAEM,+BAAW,GAAlB;QACI,OAAO;YACH,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS;YAC9B,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ;SAC/B,CAAC;IACN,CAAC;IAEM,+BAAW,GAAlB,UAAmB,QAAgB;QAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAClC,CAAC;IAEM,+BAAW,GAAlB;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC9B,CAAC;IAEM,gCAAY,GAAnB;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;IACpC,CAAC;IAEM,6BAAS,GAAhB,UAAiB,MAAM;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAEM,6BAAS,GAAhB;QACI,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO;gBACH,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK;gBACxB,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK;aAC3B,CAAA;SACJ;IACL,CAAC;IAzEa,cAAI,GAAW,WAAW,CAAC;IAC1B,kBAAQ,GAAc,IAAI,CAAC;IAyE9C,gBAAC;CA3ED,AA2EC,CA3EsC,OAAO,CAAC,KAAK,GA2EnD;kBA3EoB,SAAS","file":"","sourceRoot":"../../../../../assets/script/model","sourcesContent":["import { UserVO } from \"./vo/UserVO\";\n\nexport default class UserProxy extends puremvc.Proxy implements puremvc.IProxy {\n    public static NAME: string = \"UserProxy\";\n    private static instance: UserProxy = null;\n    private user: UserVO = null;\n    private launch: { query, scene } = null;\n\n    public static getInstance() {\n        if (!this.instance) {\n            this.instance = new UserProxy();\n        }\n        return this.instance;\n    }\n\n    public constructor() {\n        super(UserProxy.NAME);\n        this.user = new UserVO();\n    }\n\n    public setOpenId(openId: string) {\n        this.user.openId = openId;\n    }\n\n    public getOpenId() {\n        return this.user.openId;\n    }\n\n    public setPlayerId(playerId: string) {\n        this.user.playerId = playerId;\n    }\n\n    public getPlayerId() {\n        return this.user.playerId;\n    }\n\n    public setUserInfo(userInfo: any) {\n        console.log(\"update user info\", userInfo);\n        this.user.avatarUrl = userInfo.avatarUrl;\n        this.user.nickName = userInfo.nickName;\n        this.user.city = userInfo.city;\n        this.user.country = userInfo.country;\n        this.user.gender = userInfo.gender;\n        this.user.province = userInfo.province;\n    }\n\n    public getUserInfo() {\n        return {\n            avatarUrl: this.user.avatarUrl,\n            nickName: this.user.nickName,\n        };\n    }\n\n    public setModeType(modeType: number) {\n        this.user.modeType = modeType;\n    }\n\n    public getModeType() {\n        return this.user.modeType;\n    }\n\n    public hasAuthorize(): boolean {\n        return this.user.openId != null;\n    }\n\n    public setLaunch(launch) {\n        this.launch = launch;\n    }\n\n    public getLaunch() {\n        if (this.launch) {\n            return {\n                query: this.launch.query,\n                scene: this.launch.scene,\n            }\n        }\n    }\n}"]}