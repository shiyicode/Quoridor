{"version":3,"sources":["../../../../../assets/script/view/assets/script/view/RoomViewMediator.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,0CAAuD;AAEvD,gDAA2C;AAC3C,4DAA0D;AAE1D;IAA8C,oCAAgB;IAG1D,0BAAmB,aAAkB;eACjC,kBAAM,gBAAgB,CAAC,IAAI,EAAE,aAAa,CAAC;IAC/C,CAAC;IAEM,oDAAyB,GAAhC;QACI,OAAO;YACH,4BAAgB,CAAC,WAAW;YAC5B,4BAAgB,CAAC,eAAe;YAChC,4BAAgB,CAAC,eAAe;SACnC,CAAC;IACN,CAAC;IAEM,6CAAkB,GAAzB,UAA0B,YAAmC;QACzD,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAS,CAAC,IAAI,CAAc,CAAC;QACzE,IAAM,aAAa,GAAG,IAAI,CAAC,aAAyB,CAAC;QAErD,IAAM,IAAI,GAAG,YAAY,CAAC,OAAO,EAAE,CAAC;QACpC,QAAQ,YAAY,CAAC,OAAO,EAAE,EAAE;YAC5B,KAAK,4BAAgB,CAAC,WAAW,CAAC,CAAC;gBAC/B,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;gBACzC,IAAI,IAAI,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;gBAC/B,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC/B,MAAM;aACT;YACD,KAAK,4BAAgB,CAAC,eAAe,CAAC,CAAC;gBACnC,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,iBAAK,CAAC,IAAI,CAAC,CAAC;gBAClC,MAAM;aACT;YACD,KAAK,4BAAgB,CAAC,eAAe,CAAC,CAAC;gBACnC,MAAM;aACT;SACJ;IACL,CAAC;IAEM,qCAAU,GAAjB;QACI,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAS,CAAC,IAAI,CAAc,CAAC;QACzE,aAAa;QACb,SAAS,CAAC,UAAU,EAAE,CAAC;QAEvB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,YAAY,EAAE,CAAC;IAExB,CAAC;IAEM,mCAAQ,GAAf;QACI,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAS,CAAC,IAAI,CAAc,CAAC;QACzE,SAAS,CAAC,gBAAgB,EAAE,CAAC;IACjC,CAAC;IAEM,uCAAY,GAAnB;QACI,IAAM,aAAa,GAAG,IAAI,CAAC,aAAyB,CAAC;QACrD,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAS,CAAC,IAAI,CAAc,CAAC;QAEzE,aAAa,CAAC,gBAAgB,GAAG,UAAC,KAAK,EAAE,IAAI;YACzC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAClC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC,CAAC;QACF,aAAa,CAAC,iBAAiB,GAAG,UAAC,KAAK,EAAE,IAAI;YAC1C,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC,CAAC;QACF,aAAa,CAAC,gBAAgB,GAAG,UAAC,KAAK,EAAE,IAAI;YACzC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;YAClC,SAAS,CAAC,SAAS,EAAE,CAAC;YACtB,8DAA8D;QAClE,CAAC,CAAC;QACF,aAAa,CAAC,iBAAiB,GAAG,UAAC,KAAK,EAAE,IAAI;YAC1C,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;YACnC,IAAI,IAAI,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC,MAAM,CAAE,CAAC;YAC3E,oBAAQ,EAAE,CAAC,eAAe,CACtB,YAAY,EACZ,EAAE,EACF,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC,MAAM,CACrD,CAAC;QACN,CAAC,CAAC;QAIF,sDAAsD;QAEtD,0CAA0C;QAC1C,oEAAoE;QAEpE,0DAA0D;QAC1D,oCAAoC;QACpC,gCAAgC;QAChC,MAAM;QACN,0DAA0D;QAC1D,oCAAoC;QACpC,gCAAgC;QAChC,MAAM;IACV,CAAC;IAEM,mCAAQ,GAAf;QACI,IAAM,aAAa,GAAG,IAAI,CAAC,aAAyB,CAAC;QACrD,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAS,CAAC,IAAI,CAAc,CAAC;QAEzE,IAAI,IAAI,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAC/B,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAvGa,qBAAI,GAAW,kBAAkB,CAAC;IAwGpD,uBAAC;CAzGD,AAyGC,CAzG6C,OAAO,CAAC,QAAQ,GAyG7D;kBAzGoB,gBAAgB","file":"","sourceRoot":"../../../../../assets/script/view","sourcesContent":["import { RoomNotification, Scene } from \"../Constants\";\nimport RoomView from \"../view/component/RoomView\";\nimport RoomProxy from \"../model/RoomProxy\";\nimport { Platform } from \"../services/platform/IPlatform\";\n\nexport default class RoomViewMediator extends puremvc.Mediator implements puremvc.IMediator {\n    public static NAME: string = \"RoomViewMediator\";\n\n    public constructor(viewComponent: any) {\n        super(RoomViewMediator.NAME, viewComponent);\n    }\n\n    public listNotificationInterests(): string[] {\n        return [\n            RoomNotification.ROOM_UPDATE,\n            RoomNotification.ROOM_LEAVE_SUCC,\n            RoomNotification.ROOM_LEAVE_FAIL,\n        ];\n    }\n\n    public handleNotification(notification: puremvc.INotification): void {\n        const roomProxy = this.facade.retrieveProxy(RoomProxy.NAME) as RoomProxy;\n        const viewComponent = this.viewComponent as RoomView;\n\n        const data = notification.getBody();\n        switch (notification.getName()) {\n            case RoomNotification.ROOM_UPDATE: {\n                console.log(\"notify ====== room_update\");\n                let room = roomProxy.getRoom();\n                viewComponent.updateRoom(room);\n                break;\n            }\n            case RoomNotification.ROOM_LEAVE_SUCC: {\n                cc.director.loadScene(Scene.MENU);\n                break;\n            }\n            case RoomNotification.ROOM_LEAVE_FAIL: {\n                break;\n            }\n        }\n    }\n\n    public onRegister(): void {\n        const roomProxy = this.facade.retrieveProxy(RoomProxy.NAME) as RoomProxy;\n        // 绑定监听必须放在首部\n        roomProxy.listenRoom();\n\n        this.initView();\n        this.initCallback();\n\n    }\n\n    public onRemove(): void {\n        const roomProxy = this.facade.retrieveProxy(RoomProxy.NAME) as RoomProxy;\n        roomProxy.removeListenRoom();\n    }\n\n    public initCallback() {\n        const viewComponent = this.viewComponent as RoomView;\n        const roomProxy = this.facade.retrieveProxy(RoomProxy.NAME) as RoomProxy;\n\n        viewComponent.readyButtonClick = (event, data) => {\n            console.log(\"ready button click\");\n            roomProxy.setReadyStatus(true);\n        };\n        viewComponent.cancelButtonClick = (event, data) => {\n            console.log(\"cancel button click\");\n            roomProxy.setReadyStatus(false);\n        };\n        viewComponent.leaveButtonClick = (event, data) => {\n            console.log(\"leave button click\");\n            roomProxy.leaveRoom();\n            // this.facade.sendNotification(RoomNotification.ROOM_CANCEL);\n        };\n        viewComponent.inviteButtonClick = (event, data) => {\n            console.log(\"invite button click\");\n            let room = roomProxy.getRoom();\n            console.log(\"好友组队邀请\", \"type=\" + room.gameType + \"&roomId=\" + room.roomId,);\n            Platform().shareAppMessage(\n                \"房已开好，就差你了！\",\n                \"\",\n                \"type=\" + room.gameType + \"&roomId=\" + room.roomId,\n            );\n        };\n\n\n\n        // viewComponent.setModeType(userProxy.getModeType());\n\n        // let userInfo = userProxy.getUserInfo();\n        // viewComponent.setUserInfo(userInfo.avatarUrl, userInfo.nickName);\n\n        // viewComponent.mode2Button.node.on('click', (event) => {\n        //     viewComponent.setModeType(4);\n        //     userProxy.setModeType(4);\n        // });\n        // viewComponent.mode4Button.node.on('click', (event) => {\n        //     viewComponent.setModeType(2);\n        //     userProxy.setModeType(2);\n        // });\n    }\n\n    public initView() {\n        const viewComponent = this.viewComponent as RoomView;\n        const roomProxy = this.facade.retrieveProxy(RoomProxy.NAME) as RoomProxy;\n\n        let room = roomProxy.getRoom();\n        console.log(\"init view\", room);\n        viewComponent.updateRoom(room);\n    }\n}"]}