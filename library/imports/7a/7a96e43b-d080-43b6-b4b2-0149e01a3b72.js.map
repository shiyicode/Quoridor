{"version":3,"sources":["../../../../../../assets/script/library/wechat/assets/script/library/wechat/wxApi.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../../assets/script/library/wechat","sourcesContent":["import { Config } from \"../../Constants\";\n\nexport class wxApi {\n    static async login(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            wx.login({\n                success: function (code) {\n                    resolve(code);\n                },\n                fail: function (...args) {\n                    reject(...args);\n                },\n                complete: function () {\n                },\n            })\n        });\n    }\n\n    static async callFunction(name: string): Promise<any> {\n        // 在调用云开发各 API 前，需先调用初始化方法 init 一次（全局只需一次，多次调用时只有第一次生效）\n        wx.cloud.init({\n            env: Config.WXCloudEnvID,\n        })\n        return new Promise((resolve, reject) => {\n            wx.cloud.callFunction({\n                name: name,\n                success: function (res) {\n                    resolve(res);\n                },\n                fail: function () {\n                    reject();\n                },\n                complete: function () {\n                },\n            });\n        });\n    }\n\n    static async checkSession(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            console.log(\"wx checksession\");\n            wx.checkSession({\n                success: function () {\n                    resolve();\n                },\n                fail: function () {\n                    reject();\n                },\n                complete: function () {\n                },\n            });\n        });\n    }\n\n    static async authorize(scope: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            wx.authorize({\n                scope: scope,\n                success: function (res) {\n                    resolve(res);\n                },\n                fail: function (res) {\n                    reject(res);\n                }\n            })\n        });\n    }\n\n    static async getUserInfo(withCredentials: boolean, lang?: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            wx.getUserInfo({\n                withCredentials: withCredentials,\n                lang: lang,\n                success: function (res) {\n                    resolve(res);\n                },\n                fail: function (res) {\n                    reject(res)\n                }\n            })\n        });\n    }\n\n    static async getSetting(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            wx.getSetting({\n                success: function (res) {\n                    resolve(res);\n                },\n                fail: function () {\n                    reject();\n                }\n            });\n        });\n    }\n\n    static async authSettingOfUserInfo(): Promise<boolean> {\n        return new Promise<boolean>(async (resolve, reject) => {\n            try {\n                let res = await wxApi.getSetting();\n                if (res.authSetting && res.authSetting['scope.userInfo']) {\n                    resolve(true);\n                } else {\n                    resolve(false);\n                }\n            } catch (e) {\n                resolve(false);\n            }\n        });\n    }\n\n    static async onShow(): Promise<any> {\n        return new Promise(async (resolve, reject) => {\n            wx.onShow((res) => {\n                resolve(res);\n            });\n        });\n    }\n\n\n    // static showLoading(title: string = \"\") {\n    //     wx.showLoading({\n    //         title: title,\n    //         mask: true\n    //     });\n    // }\n\n    // static hideLoading() {\n    //     wx.hideLoading({\n    //     });\n    // }\n\n    // static showToast(title: string, duration: any = 1000) {\n    //     wx.showToast({\n    //         title: title,\n    //         icon: 'success',\n    //         duration: duration,\n    //     });\n    // }\n\n    // static hideLoading() {\n    //     wx.hideLoading({\n    //     });\n    // }\n\n\n\n\n\n    static getUserGameLabel() {\n\n    }\n}\n"]}