{"version":3,"sources":["RoomProxy.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/script/model","sourcesContent":["import { RoomVO, PlayerVO } from \"./vo/RoomVO\";\nimport { RoomNotification, GameType } from \"../Constants\";\nimport Util from \"../util/Util\";\nimport UserProxy from \"./UserProxy\";\n\n// 只需要在使用 MGOBE 之前 import 一次该文件\nimport \"../library/mgobe/MGOBE.js\";\nimport MgobeService from \"../services/mgobe/MgobeService\";\n\n\n// 直接使用 MGOBE\nconst { Room, Listener, ErrCode, ENUM, DebuggerLog } = MGOBE;\n\nexport default class RoomProxy extends puremvc.Proxy implements puremvc.IProxy {\n    public static NAME: string = \"RoomProxy\";\n    private static instance: RoomProxy = null;\n    private room: RoomVO = null;\n\n    public static getInstance() {\n        if (!this.instance) {\n            this.instance = new RoomProxy();\n        }\n        return this.instance;\n    }\n\n    public constructor() {\n        super(RoomProxy.NAME);\n        this.room = new RoomVO();\n    }\n\n    // 判断是否已在房间内\n    public returnRoom() {\n        MgobeService.getMyRoom((event) => {\n            if (event.code === MGOBE.ErrCode.EC_OK) {\n                console.log(\"玩家已在房间中\", event);\n                // 如果房间有进行中的游戏，才返回\n                this.setRoom(event.data.roomInfo);\n                this.listenRoom();\n                this.facade.sendNotification(RoomNotification.ROOM_RETURN_CHECK);\n            } else {\n                console.log(\"玩家不在房间中\");\n                this.facade.sendNotification(RoomNotification.ROOM_RETURN_NOT_CHECK);\n            }\n        });\n    }\n\n    public joinRoom(roomId: string) {\n        console.log(\"加入房间\");\n        const userProxy = this.facade.retrieveProxy(UserProxy.NAME) as UserProxy;\n\n        let userInfo = userProxy.getUserInfo();\n        let player = new PlayerVO();\n        player.avatarUrl = userInfo.avatarUrl;\n        player.nickName = userInfo.nickName;\n        player.isReady = false;\n\n        MgobeService.joinRoom(roomId, player, (event) => {\n            if (event.code === MGOBE.ErrCode.EC_OK) {\n                console.log(\"加入房间成功\", event);\n                this.setRoom(event.data.roomInfo);\n                this.listenRoom();\n                this.facade.sendNotification(RoomNotification.ROOM_JOIN_SUCC);\n            } else {\n                console.log(\"加入房间失败\", event);\n                this.facade.sendNotification(RoomNotification.ROOM_JOIN_FAIL);\n            }\n        });\n    }\n\n    public createRoom(gameType: GameType) {\n        console.log(\"创建房间\");\n        const userProxy = this.facade.retrieveProxy(UserProxy.NAME) as UserProxy;\n\n        let userInfo = userProxy.getUserInfo();\n        let player = new PlayerVO();\n        player.avatarUrl = userInfo.avatarUrl;\n        player.nickName = userInfo.nickName;\n        player.isReady = false;\n\n        MgobeService.createRoom(player, Util.getPlayerCntByType(gameType), gameType, (event) => {\n            if (event.code === MGOBE.ErrCode.EC_OK) {\n                console.log(\"创建房间成功\", event);\n                this.setRoom(event.data.roomInfo);\n                this.listenRoom();\n                this.facade.sendNotification(RoomNotification.ROOM_CREATE_SUCC);\n            } else {\n                console.log(\"创建房间失败\", event);\n                this.facade.sendNotification(RoomNotification.ROOM_CREATE_FAIL);\n            }\n        });\n    }\n\n    // TODO 断线时不应该离开房间，  重回游戏时，如果在游戏中，应提示是否返回游戏\n    public leaveRoom() {\n        MgobeService.leaveRoom((event) => {\n            if (event.code === MGOBE.ErrCode.EC_OK || event.code === MGOBE.ErrCode.EC_ROOM_PLAYER_NOT_IN_ROOM) {\n                this.facade.sendNotification(RoomNotification.ROOM_LEAVE_SUCC);\n            } else {\n                this.facade.sendNotification(RoomNotification.ROOM_LEAVE_FAIL);\n            }\n        });\n    }\n\n    public setReadyStatus(hasReady: boolean) {\n        MgobeService.changeCustomPlayerStatus(hasReady ? 1 : 0, (event) => {\n            if (event.code === MGOBE.ErrCode.EC_OK) {\n            } else {\n                console.log(\"弹窗，提醒用户重试\");\n            }\n        });\n    }\n\n    public getRoom(): RoomVO {\n        return this.room;\n    }\n\n    public setRoom(roomInfo: MGOBE.types.RoomInfo) {\n        const userProxy = this.facade.retrieveProxy(UserProxy.NAME) as UserProxy;\n\n        this.room.gameType = roomInfo.type as GameType;\n        this.room.roomId = roomInfo.id;\n\n        let meIdx = 0;\n        let playerList = roomInfo.playerList;\n        for (let i = 0; i < playerList.length; i++) {\n            if (playerList[i].id == userProxy.getPlayerId()) {\n                meIdx = i;\n                break;\n            }\n        }\n\n        for (let i = 0; i < playerList.length; i++) {\n            let new_i = (i + meIdx) % playerList.length;\n            this.room.playersInfo[i].playerID = playerList[new_i].id;\n            this.room.playersInfo[i].avatarUrl = playerList[new_i].customProfile;\n            this.room.playersInfo[i].nickName = playerList[new_i].name;\n            this.room.playersInfo[i].isReady = playerList[new_i].customPlayerStatus == 1;\n        }\n    }\n\n    public listenRoom() {\n        console.log(\"启动room监听\");\n        // 开启onUpdate监听\n        MgobeService.room.onUpdate = (event) => {\n            console.log(\"事件回调onUpdate\", event.roomInfo);\n            this.setRoom(event.roomInfo);\n            if (!event.roomInfo.playerList.find(player => player.customPlayerStatus !== 1)) {\n                // TODO 全部玩家准备好就跳转Game\n            }\n            this.facade.sendNotification(RoomNotification.ROOM_UPDATE);\n        };\n\n        MgobeService.room.onJoinRoom = (event) => {\n\n        };\n\n        MgobeService.room.onLeaveRoom = (event) => {\n\n        };\n    }\n\n    public removeListenRoom() {\n        console.log(\"关闭room监听\");\n        // 关闭onUpdate监听\n        MgobeService.room.onUpdate = null;\n    }\n}"]}