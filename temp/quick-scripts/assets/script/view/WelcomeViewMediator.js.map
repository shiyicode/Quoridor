{"version":3,"sources":["WelcomeViewMediator.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../assets/script/view","sourcesContent":["import { Scene, Config } from \"../Constants\";\nimport UserProxy from \"../model/UserProxy\";\nimport { Platform } from \"../services/platform/IPlatform\";\nimport MgobeService from \"../services/mgobe/MgobeService\";\n\nexport default class WelcomeViewMediator extends puremvc.Mediator implements puremvc.IMediator {\n    public static NAME: string = \"WelcomeViewMediator\";\n\n    public constructor(viewComponent: any) {\n        super(WelcomeViewMediator.NAME, viewComponent);\n    }\n\n    public listNotificationInterests(): string[] {\n        return [\n        ];\n    }\n\n    public handleNotification(notification: puremvc.INotification): void {\n        const data = notification.getBody();\n        switch (notification.getName()) {\n        }\n    }\n\n    public onRegister(): void {\n        this.initialization();\n        this.registerOnShow();\n    }\n\n    public onRemove(): void {\n    }\n\n    public async initialization() {\n        const userProxy = this.facade.retrieveProxy(UserProxy.NAME) as UserProxy;\n\n        // 获取用户唯一标识\n        // if (!userProxy.getOpenId()) {\n        //     let openId = await Platform().getOpenID();\n        //     userProxy.setOpenId(openId);\n        // }\n\n        let openId = await Platform().getOpenID();\n        userProxy.setOpenId(openId);\n\n        await Platform().authorize();\n\n        // 展示loading\n        this.viewComponent.popupLayer.getComponent(\"PopupView\").showLoading();\n\n        // 获取用户信息\n        if (!userProxy.getUserInfo().avatarUrl) {\n            let userInfo = await Platform().getUserInfo();\n            userProxy.setUserInfo(userInfo);\n        }\n\n        // 初始化 Mgobe SDK\n        MgobeService.initMgobeSDK(userProxy.getOpenId(), Config.MGOBEGameId, Config.MGOBESecretKey,\n            Config.MGOBEHost, \"\", (res: { code: MGOBE.ErrCode }) => {\n                if (res.code === MGOBE.ErrCode.EC_OK) {\n                    userProxy.setPlayerId(MGOBE.Player.id);\n                    // 获取启动参数\n                    this.loadLaunchOption();\n                    // 初始化成功，跳转到主界面\n                    cc.director.loadScene(Scene.MENU);\n                } else {\n                    // TODO 失败，展示重试对话框\n                    console.log(\"initialization fail\");\n                }\n            });\n    }\n\n    // 启动时，获取launch参数\n    async loadLaunchOption() {\n        const userProxy = this.facade.retrieveProxy(UserProxy.NAME) as UserProxy;\n\n        let res = await Platform().getLaunchOption();\n        if (res) {\n            userProxy.setLaunch(res);\n        }\n    }\n\n    async registerOnShow() {\n        const userProxy = this.facade.retrieveProxy(UserProxy.NAME) as UserProxy;\n\n        let res = await Platform().getLaunchOptionOnShow();\n        console.log(\"onShow\", res);\n        userProxy.setLaunch(res);\n    }\n}"]}